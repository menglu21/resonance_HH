--- jetmetHelperRun2.py	2023-10-21 23:18:31.000000001 +0200
+++ /afs/cern.ch/user/m/melu/work/HH/CMSSW_10_6_29_old/src/PhysicsTools/NanoAODTools/python/postprocessing/modules/jme/jetmetHelperRun2.py	2023-07-05 14:35:12.000000001 +0200
@@ -78,7 +78,7 @@
     '2018': 'Autumn18_V7b_MC',
     'UL2016_preVFP': 'Summer20UL16APV_JRV3_MC',
     'UL2016': 'Summer20UL16_JRV3_MC',
-    'UL2017': 'Summer19UL17_JRV2_MC',
+    'UL2017': 'Summer19UL17_JRV3_MC',
     'UL2018': 'Summer19UL18_JRV2_MC',
 }
 
@@ -158,7 +158,8 @@
         else:
             jmeCorrections = lambda: jetmetUncertaintiesProducer(
                 era=dataYear,
-                archive=archiveTag_,
+                #archive=archiveTag_,
+                archive=None,
                 globalTag=jecTag_,
                 jesUncertainties=jmeUncert_,
                 jerTag=jerTag_,
@@ -182,7 +183,8 @@
         else:
             jmeCorrections = lambda: fatJetUncertaintiesProducer(
                 era=dataYear,
-                archive=archiveTag_,
+                archive=None,
+                #archive=archiveTag_,
                 globalTag=jecTag_,
                 jesUncertainties=jmeUncert_,
                 jetType=jetType,
@@ -199,3 +201,45 @@
 #jmeCorrections = createJMECorrector(False, "2016", "B", "Total", True, "AK4PFchs", False)
 # include jmeCorrections() in the list of modules to run.
 ###
+jmeCorrections_UL2016APVMC = createJMECorrector(True, "UL2016_preVFP", "B", "Total", "AK4PFchs", False)
+jmeCorrections_UL2016MC = createJMECorrector(True, "UL2016", "B", "Total", "AK4PFchs", False)
+jmeCorrections_UL2016B = createJMECorrector(False, "UL2016_preVFP", "B", "Total", "AK4PFchs", False)
+jmeCorrections_UL2016C = createJMECorrector(False, "UL2016_preVFP", "C", "Total", "AK4PFchs", False)
+jmeCorrections_UL2016D = createJMECorrector(False, "UL2016_preVFP", "D", "Total", "AK4PFchs", False)
+jmeCorrections_UL2016E = createJMECorrector(False, "UL2016_preVFP", "E", "Total", "AK4PFchs", False)
+jmeCorrections_UL2016APVF = createJMECorrector(False, "UL2016_preVFP", "F", "Total", "AK4PFchs", False)
+jmeCorrections_UL2016F = createJMECorrector(False, "UL2016", "F", "Total", "AK4PFchs", False)
+jmeCorrections_UL2016G = createJMECorrector(False, "UL2016", "G", "Total", "AK4PFchs", False)
+jmeCorrections_UL2016H = createJMECorrector(False, "UL2016", "H", "Total", "AK4PFchs", False)
+jmeCorrections_UL2017MC = createJMECorrector(True, "UL2017", "B", "Total", "AK4PFchs", False)
+jmeCorrections_UL2017B = createJMECorrector(False, "UL2017", "B", "Total", "AK4PFchs", False)
+jmeCorrections_UL2017C = createJMECorrector(False, "UL2017", "C", "Total", "AK4PFchs", False)
+jmeCorrections_UL2017D = createJMECorrector(False, "UL2017", "D", "Total", "AK4PFchs", False)
+jmeCorrections_UL2017E = createJMECorrector(False, "UL2017", "E", "Total", "AK4PFchs", False)
+jmeCorrections_UL2017F = createJMECorrector(False, "UL2017", "F", "Total", "AK4PFchs", False)
+jmeCorrections_UL2018MC = createJMECorrector(True, "UL2018", "B", "Total", "AK4PFchs", False)
+jmeCorrections_UL2018A = createJMECorrector(False, "UL2018", "A", "Total", "AK4PFchs", False)
+jmeCorrections_UL2018B = createJMECorrector(False, "UL2018", "B", "Total", "AK4PFchs", False)
+jmeCorrections_UL2018C = createJMECorrector(False, "UL2018", "C", "Total", "AK4PFchs", False)
+jmeCorrections_UL2018D = createJMECorrector(False, "UL2018", "D", "Total", "AK4PFchs", False)
+fatjmeCorrections_UL2016APVMC = createJMECorrector(True, "UL2016_preVFP", "B", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2016MC = createJMECorrector(True, "UL2016", "B", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2016B = createJMECorrector(False, "UL2016_preVFP", "B", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2016C = createJMECorrector(False, "UL2016_preVFP", "C", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2016D = createJMECorrector(False, "UL2016_preVFP", "D", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2016E = createJMECorrector(False, "UL2016_preVFP", "E", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2016APVF = createJMECorrector(False, "UL2016_preVFP", "F", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2016F = createJMECorrector(False, "UL2016", "F", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2016G = createJMECorrector(False, "UL2016", "G", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2016H = createJMECorrector(False, "UL2016", "H", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2017MC = createJMECorrector(True, "UL2017", "B", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2017B = createJMECorrector(False, "UL2017", "B", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2017C = createJMECorrector(False, "UL2017", "C", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2017D = createJMECorrector(False, "UL2017", "D", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2017E = createJMECorrector(False, "UL2017", "E", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2017F = createJMECorrector(False, "UL2017", "F", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2018MC = createJMECorrector(True, "UL2018", "B", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2018A = createJMECorrector(False, "UL2018", "A", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2018B = createJMECorrector(False, "UL2018", "B", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2018C = createJMECorrector(False, "UL2018", "C", "Total", "AK8PFchs", False)
+fatjmeCorrections_UL2018D = createJMECorrector(False, "UL2018", "D", "Total", "AK8PFchs", False)
